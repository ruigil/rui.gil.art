var z=Object.defineProperty;var o=(e,r)=>z(e,"name",{value:r,configurable:!0});var k=class e{static{o(this,"PContext")}state;static async init(r){if(!r)throw new Error("Canvas is not defined");let p=r.getContext("webgpu");if(!p)throw new Error("WebGPU not supported on this browser.");let s=await navigator.gpu.requestAdapter();if(!s)throw new Error("No appropriate GPUAdapter found.");let y=await s.requestDevice();return p.configure({device:y,format:navigator.gpu.getPreferredCanvasFormat()}),new e({context:p,device:y})}constructor(r){this.state={...r}}build(r){let p=o((n,u=1)=>{let f=n.isArray?new ArrayBuffer(n.arrayStride*u):new ArrayBuffer(n.size),i=o(t=>{switch(t){case"f32":return Float32Array;case"u32":return Uint32Array;case"i32":return Int32Array}return Uint8Array},"ArrayType"),l=o(t=>{if(t.isArray)return Array.from({length:t.arrayCount},(a,v)=>l({...t,isArray:!1,offset:v*t.arrayStride+t.offset,size:t.size}));if(t.isStruct)return Object.fromEntries(Object.entries(t.members).map(([a,v])=>[a,l({...v,offset:v.offset+t.offset})]));{let a=i(t.type);return new a(f,t.offset,t.size/a.BYTES_PER_ELEMENT)}},"makeView"),b=o((t,a,v)=>t.isArray?Array.from({length:v},(S,w)=>b({...t,isArray:!1},a[w],v)):t.isStruct?Object.fromEntries(Object.entries(t.members).map(([S,w])=>[S,b(w,a[S],w.arrayCount)])):a.length>1?Array.from(a):a[0],"getViewValue"),d=o((t,a,v,S)=>{t.isArray?Array.from({length:v},(w,I)=>{S&&S[I]&&d({...t,isArray:!1},a[I],v,S[I])}):t.isStruct?Object.entries(t.members).map(([w,I])=>{S[w]&&d(I,a[w],I.arrayCount,S[w])}):S&&a.length>1?a.set(S):a.set([S])},"setViewValue"),g=o(t=>{new Uint8Array(f).set(new Uint8Array(t))},"updateBuffer"),m=l({...n,offset:0,arrayCount:n.arrayCount!=0?n.arrayCount:u});return{name:n.name,buffer:f,set:t=>d(n,m,u,t),get:()=>b(n,m,u),update:t=>g(t)}},"makeBufferView"),s=o(n=>{if(!n.code)throw new Error("Code is not defined in spec");return this.state.device.createShaderModule({label:"Custom shader",code:n.code})},"createShaderModule"),y=o(n=>{let u=[],f=o((g,m)=>{let t=o((w,I)=>`${w=="f32"?"float32":"uint32"}x${I/4}`,"format"),a=n.defs.entries.vertex.inputs,v=0,S=a.filter(w=>m.includes(w.name)).map(w=>{let I={shaderLocation:w.location,offset:v,format:t(w.type,w.size)};return v+=w.size,I});if(S.length==0)throw new Error(`Vertex attributes ${m} not found`);return{arrayStride:v,stepMode:g,attributes:S}},"makeLayout"),i=new Float32Array(n.geometry&&n.geometry.vertex.data||N(1));u.push(f("vertex",n.geometry?.vertex.attributes||["pos"]));let l=this.state.device.createBuffer({label:"Geometry vertices",size:i.byteLength,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST});this.state.device.queue.writeBuffer(l,0,i);let b;if(n.geometry&&n.geometry.instance&&(u.push(f("instance",n.geometry?.instance.attributes)),n.geometry.instance.data)){let g=new Float32Array(n.geometry&&n.geometry.instance.data);b=this.state.device.createBuffer({label:"Geometry instance",size:g.byteLength,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST}),this.state.device.queue.writeBuffer(l,0,g)}let d=n.geometry&&(n.geometry.vertex.instances||n.geometry.instance?.instances||1);return{vertexBuffer:l,vertexCount:i.length/2,vertexBufferLayout:u,instances:d,instanceBuffer:b}},"createGeometry"),h=o(n=>{let u=n.uniforms?n.uniforms(0,[0,0,0,0]):{},f=[];for(let[i,l]of Object.entries(n.defs.uniforms)){let b=l,d=p(b);u[i]&&d.set(u[i]);let g=this.state.device.createBuffer({label:"uniforms",size:d.buffer.byteLength,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});this.state.device.queue.writeBuffer(g,0,d.buffer),f.push({name:b.name,view:d,resource:{buffer:g},binding:b.binding,type:"uniform"})}return f},"createUniforms"),V=o(n=>{let u=new Array,f=new Array,i=new Array,l=o(b=>n.storages?n.storages.find(d=>d.name===b):void 0,"storage");for(let[b,d]of Object.entries(n.defs.storages)){let g=d,m=l(b);if(!m)throw new Error(`Storage spec for ${b} not found`);let t=p(g,m.size),a=this.state.device.createBuffer({label:`${g.name} storage buffer`,size:t.buffer.byteLength,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST|(m.read?GPUBufferUsage.COPY_SRC:0)|(m.vertex?GPUBufferUsage.VERTEX:0)});m.read&&f.push({srcBuffer:a,dstBuffer:this.state.device.createBuffer({label:`${m.name} read buffer`,size:t.buffer.byteLength,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),view:t}),m.vertex&&i.push({buffer:a}),m.data&&t.set(m.data),this.state.device.queue.writeBuffer(a,0,t.buffer),u.push({binding:g.binding,resource:{buffer:a},type:g.access==="read_write"?"storage":"read-only-storage"})}return{storages:u,readStorages:f,vertexStorages:i}},"createStorage"),E=o(n=>n.defs.samplers.map(f=>({binding:f.binding,resource:this.state.device.createSampler({label:f.name,magFilter:"linear",minFilter:"linear"}),type:"sampler"})),"createSamplers"),A=o(n=>{let u=o((i,l)=>{let b=this.state.device.createTexture({label:l,size:{width:i.width,height:i.height},format:"rgba8unorm",usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.STORAGE_BINDING|GPUTextureUsage.RENDER_ATTACHMENT});return this.state.device.queue.copyExternalImageToTexture({source:i},{texture:b},[i.width,i.height]),b.createView({format:"rgba8unorm",label:l})},"texture");return n.defs.textures.map(i=>{let l=n.textures?n.textures.find(d=>d.name===i.name):void 0;if(!l)throw new Error(`Texture spec for ${i.name} is undefined`);if(!l.data)throw new Error(`Texture data for ${i.name} is undefined`);return l.data instanceof HTMLVideoElement?{binding:i.binding,resource:this.state.device.importExternalTexture({label:"external_texture",source:l.data}),type:"external_texture",video:l.data}:{binding:i.binding,resource:u(l.data,l.storage?"storage_texture":"texture"),type:l.storage?"storage_texture":"texture"}})},"createTextures"),L=o(n=>{let u=[];return n.forEach(i=>{switch(i.type){case"uniform":u.push({binding:i.binding,visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT|GPUShaderStage.COMPUTE,buffer:{type:i.type}});break;case"storage":u.push({binding:i.binding,visibility:GPUShaderStage.COMPUTE,buffer:{type:i.type}});break;case"read-only-storage":u.push({binding:i.binding,visibility:GPUShaderStage.VERTEX|GPUShaderStage.COMPUTE,buffer:{type:i.type}});break;case"sampler":u.push({binding:i.binding,visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT|GPUShaderStage.COMPUTE,sampler:{type:"filtering"}});break;case"texture":u.push({binding:i.binding,visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT|GPUShaderStage.COMPUTE,texture:{viewDimension:"2d"}});break;case"storage_texture":u.push({binding:i.binding,visibility:GPUShaderStage.FRAGMENT|GPUShaderStage.COMPUTE,storageTexture:{viewDimension:"2d",format:"rgba8unorm"}});break;case"external_texture":u.push({binding:i.binding,visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT|GPUShaderStage.COMPUTE,externalTexture:{viewDimension:"2d"}});break}}),this.state.device.createBindGroupLayout({label:"Bind Group Layout",entries:u})},"createBindGroupLayout"),M=o((n,u,f)=>{let i=new Array(n.defs.bindGroupLength);u.forEach(t=>{i[t.binding]=t});let l=u.length,b=n.bindings?.length||1,d=new Array(b),g=Array(b),m=Array(b);for(let t=0;t<b;t++){m[t]=[];for(let a=0;a<l;a++){let v=n.bindings?n.bindings[t][a]:a;if(v==null)throw new Error(`Binding ${a} was not found in group ${t}. Check your bindings spec.`);let S=i[v];if(!S)throw new Error(`Binding ${v} defined in group ${t} not found`);m[t].push({binding:n.bindings?n.bindings[0][a]:a,resource:S.resource}),S.type==="external_texture"&&(g[t]={idx:a,video:S.video})}d[t]=this.state.device.createBindGroup({label:`Bind Group ${t}`,layout:f,entries:m[t]})}return t=>{if(g[t]){let{idx:a,video:v}=g[t];return m[t][a].resource=this.state.device.importExternalTexture({source:v}),this.state.device.createBindGroup({label:`Bind Group ${t}`,layout:f,entries:m[t]})}return d[t]}},"createBindings"),U=o(n=>this.state.device.createPipelineLayout({label:"Pipeline Layout",bindGroupLayouts:[n]}),"createPipelineLayout"),B=o((n,u,f)=>{let i=[],l=o(d=>{let g=d.bindings?d.bindings.length:1,m=d.computeGroupCount?d.computeGroupCount:1;return m>1?m+(g-(m-2)%g-1):1},"computeGC"),b=o(d=>f.computes?f.computes.find(g=>g.name===d):void 0,"compute");for(let d=0;d<f.defs.entries.computes.length;d++){let g=f.defs.entries.computes[d].name,m=b(g);if(!m)throw new Error(`Spec for compute ${g} not found!`);let t=this.state.device.createComputePipeline({label:`${g} compute pipeline`,layout:u,compute:{module:n,entryPoint:g}});i.push({pipeline:t,workgroups:m.workgroups||[1,1,1],instances:m.instances||1})}return{computeGroup:i,computeGroupCount:l(f)}},"createComputePipelines"),C=o((n,u,f)=>{if(!f.defs.entries.vertex||!f.defs.entries.fragment)return;let i=f.defs.entries.vertex.name,l=f.defs.entries.fragment.name;return this.state.device.createRenderPipeline({label:"Render pipeline",layout:u,vertex:{module:n,entryPoint:i,buffers:q.vertexBufferLayout},fragment:{module:n,entryPoint:l,targets:[{format:navigator.gpu.getPreferredCanvasFormat()}]}})},"createRenderPipeline"),T=s(r),q=y(r),P=h(r),c=V(r),O=E(r),R=A(r),_=[...P,...c.storages,...O,...R],x=L(_),G=U(x),D=M(r,_,x),F=C(T,G,r),$=B(T,G,r);return new e({...this.state,geometry:q,uniforms:P,storages:c,pipelines:{render:F,compute:$,bindings:D},clearColor:r.clearColor||{r:0,g:0,b:0,a:1},wgslSpec:r})}addBufferListener(r){return new e({...this.state,bufferListeners:[r]})}async frame(r=0,p){let{bufferListeners:s,storages:y,device:h,uniforms:V,pipelines:E,geometry:A,context:L,clearColor:M,wgslSpec:U}=this.state,B=o(P=>U.bindings?P%U.bindings.length:0,"bindGroup"),C=o(P=>{V?.forEach(c=>{P[c.name]&&(c.view.set(P[c.name]),h.queue.writeBuffer(c.resource.buffer,0,c.view.buffer))})},"setUniforms"),T=o(()=>{let P=h.createCommandEncoder();if(E?.compute){let c=P.beginComputePass();for(let O=0;O<E.compute.computeGroupCount;O++){let R=B(r+O);for(let _=0;_<E.compute.computeGroup.length;_++){let x=E.compute.computeGroup[_];c.setPipeline(x.pipeline);for(let G=0;G<x.instances;G++){let D=B(R+G);c.setBindGroup(0,E.bindings(D)),c.dispatchWorkgroups(...x.workgroups)}}}c.end()}if(E?.render){let c=P.beginRenderPass({colorAttachments:[{view:L.getCurrentTexture().createView(),loadOp:"clear",clearValue:M,storeOp:"store"}]});c.setPipeline(E.render),A?.vertexBuffer&&c.setVertexBuffer(0,A.vertexBuffer),y&&y.vertexStorages.length>0?c.setVertexBuffer(1,y.vertexStorages[B(r)].buffer):A?.instanceBuffer&&c.setVertexBuffer(1,A.instanceBuffer),c.setBindGroup(0,E.bindings(B(r))),A&&c.draw(A.vertexCount,A.instances||1),c.end()}y&&y.readStorages.length>0&&y.readStorages.forEach(c=>{P.copyBufferToBuffer(c.srcBuffer,0,c.dstBuffer,0,c.view.buffer.byteLength)}),h.queue.submit([P.finish()])},"submitCommands"),q=o(async()=>{if(s){let P=y?.readStorages||[];if(P.length==0)return;await Promise.all(P.map(c=>c.dstBuffer.mapAsync(GPUMapMode.READ))),s.forEach(c=>{let O=P.map(R=>(R.view.update(R.dstBuffer.getMappedRange()),R.view));c.onRead(O),P.forEach(R=>R.dstBuffer.unmap())})}},"readBuffers");C(p),T(),await q()}};var N=o(e=>[-e,-e,e,-e,e,e,-e,-e,e,e,-e,e],"square"),J=o(e=>[-e,-e,e,-e,0,e],"triangle"),K=o((e,r)=>{let p=[];for(let s=0;s<r;s++){let y=s/r*Math.PI*2,h=(s+1)/r*Math.PI*2;p.push(0,0,Math.cos(y)*e,Math.sin(y)*e,Math.cos(h)*e,Math.sin(h)*e)}return p},"circle"),Q=o(e=>[-e,-e,-e,e,-e,-e,e,e,-e,-e,e,-e,-e,-e,e,e,-e,e,e,e,e,-e,e,e,-e,-e,-e,-e,e,-e,-e,e,e,-e,-e,e,e,-e,-e,e,e,-e,e,e,e,e,-e,e,-e,-e,-e,-e,-e,e,e,-e,e,e,-e,-e,-e,e,-e,-e,e,e,e,e,e,e,e,-e],"cube"),Z=o(()=>({vertices:[[-.274799,-.273,.2796],[.278,-.273,.2796],[.278,-.273,-.2796],[-.271599,-.273,-.2796],[-.277999,.2758,.2796],[-.277999,.2758,-.2796],[.278,.2758,-.2796],[.278,.2758,.2796],[.013239,-.2729,-.017047],[.013239,.0571,-.017047],[-.144353,-.2729,.031839],[-.144353,.0571,.031839],[-.035647,-.2729,-.174639],[-.035647,.0571,-.174639],[-.193239,-.2729,-.125753],[-.193239,.0571,-.125753],[.195646,-.2729,.055136],[.195646,-.1079,.055136],[.148464,-.2729,.213246],[.148464,-.1079,.213246],[.037536,-.2729,.007954],[.037536,-.1079,.007954],[-.009646,-.2729,.166064],[-.009646,-.1079,.166064],[-.065,.2757,.0526],[.065,.2757,.0526],[-.065,.2757,-.0524],[.065,.2757,-.0524],[-.274799,-.273,.2796],[-.271599,-.273,-.2796],[-.277999,.2758,.2796],[-.277999,.2758,-.2796],[.278,-.273,.2796],[.278,-.273,-.2796],[.278,.2758,-.2796],[.278,.2758,.2796]],indices:[[0,1,2],[0,2,3],[4,5,6],[4,6,7],[6,3,2],[6,5,3],[9,10,8],[11,14,10],[15,12,14],[13,8,12],[14,8,10],[11,13,15],[9,11,10],[11,15,14],[15,13,12],[13,9,8],[14,12,8],[11,9,13],[17,18,16],[19,22,18],[23,20,22],[21,16,20],[22,16,18],[19,21,23],[17,19,18],[19,23,22],[23,21,20],[21,17,16],[22,20,16],[19,17,21],[26,25,24],[26,27,25],[31,28,29],[31,30,28],[35,33,32],[35,34,33]],meshes:[{vi:0,fi:0,nv:8,nf:6},{vi:8,fi:6,nv:8,nf:12},{vi:16,fi:18,nv:8,nf:12},{vi:24,fi:30,nv:4,nf:2},{vi:28,fi:32,nv:4,nf:2},{vi:32,fi:34,nv:4,nf:2}],materials:[{color:[.73,.73,.73,1],emission:[0,0,0,0],metallic:0,roughness:0},{color:[.73,.73,.73,1],emission:[0,0,0,0],metallic:1,roughness:0},{color:[.73,.73,.73,1],emission:[0,0,0,0],metallic:0,roughness:0},{color:[.73,.73,.73,1],emission:[15,15,15,1],metallic:0,roughness:0},{color:[.65,.05,.05,1],emission:[0,0,0,0],metallic:0,roughness:0},{color:[.12,.45,.15,1],emission:[0,0,0,0],metallic:0,roughness:0}]}),"cornell");var re=o(async e=>await(await fetch(e)).text(),"loadWGSL"),ne=o(async e=>await(await fetch(e)).json(),"loadJSON"),oe=o(async e=>{let r=await fetch(new URL(e,import.meta.url).toString());return await createImageBitmap(await r.blob())},"loadTexture"),ie=o(async()=>{let e=await navigator.mediaDevices.getUserMedia({video:!0}),r=e.getVideoTracks()[0].getSettings(),p=e.getVideoTracks()[0].getCapabilities(),s=document.createElement("video");return s.srcObject=e,s.play(),await new Promise(h=>{s.addEventListener("loadedmetadata",()=>{h()})}),{video:s,settings:r,capabilities:p}},"loadWebcam");var X=o((e,r,p)=>{let s=Math.PI;return Math.exp(-(e*e+r*r)/(2*p*p))/(2*s*p*p)},"gaussian"),ce=o(e=>{let r=[0,0,0,0,0,0,0,0,0],p=0;for(let s=0;s<9;s++){let y=s%3,h=Math.floor(s/3);r[h*3+y]=X(y-1,h-1,e),p+=r[h*3+y]}for(let s=0;s<9;s++){let y=s%3,h=Math.floor(s/3);r[h*3+y]/=p}return r},"createGaussianKernel"),fe=o((e,r,p)=>{let s=Math.min(e,r)/p;return{x:Math.floor(e/s+.5),y:Math.floor(r/s+.5)}},"scaleAspect"),de=o((e,r,p,s,y)=>{let h=0,V=0,E=0,A=performance.now(),L=null,M=null,U={intid:0,requestId:0},B={play:!1,delta:0},C=[0,0,0,0],T=[0,0],q=[1,1],P=o((G,D)=>{C[2]=C[0],C[3]=C[1];let F=r.getBoundingClientRect();C[0]=(G-F.left)/F.width,C[1]=(D-F.top)/F.height,M&&M.mouse&&M.mouse(C[0],C[1],h)},"updateMouse");r.addEventListener("mousemove",G=>P(G.clientX,G.clientY)),r.addEventListener("touchmove",G=>P(G.touches[0].clientX,G.touches[0].clientY));let c=o(()=>{s&&s.onFPS({fps:(h/V).toFixed(2),time:V.toFixed(1),frame:h})},"fps"),O=o(async()=>{L==null&&(L=await k.init(r)),h=0,V=0,E=0,cancelAnimationFrame(U.requestId),M=e(r.width,r.height),L=L.build(M),y&&(L=L.addBufferListener(y)),U.requestId=requestAnimationFrame(x),A=performance.now()},"reset"),R=o(async G=>{r.width=G[0].target.clientWidth*devicePixelRatio,r.height=G[0].target.clientHeight*devicePixelRatio,T[0]=r.width,T[1]=r.height;let D=T[0]<T[1]?T[0]:T[1];q[0]=T[0]/D,q[1]=T[1]/D;try{await O()}catch(F){console.log(F);let $=document.querySelector("#error");$.innerHTML=`<span>Sorry, but there was an error with your WebGPU context. <br/> WebGPU is a new standard for graphics on the web.<br/>The standard is currently implemented only <a href='https://caniuse.com/webgpu'>on certain browsers</a>.<br/> For the full experience please use a supported browser. <br/><span style='color:red;'>${F}</span><span/>`}},"canvasResize");new ResizeObserver(R).observe(r);let x=o(async()=>{B.play&&!U.intid&&(U.intid=setInterval(()=>c(),200)),!B.play&&U.intid&&(clearInterval(U.intid),U.intid=0),B.play?(V=(performance.now()-A)/1e3-E,await L.frame(h,{sys:{frame:h,time:V,mouse:C,resolution:T,aspect:q},...M.uniforms?M.uniforms(h):{},...p}),h++):E=(performance.now()-A)/1e3-V,B.delta!=0?setTimeout(()=>U.requestId=requestAnimationFrame(x),B.delta):U.requestId=requestAnimationFrame(x)},"render");return{start:()=>{B.play=!0},togglePlayPause:()=>{B.play=!B.play},stop:()=>{cancelAnimationFrame(U.requestId)},reset:()=>{O()},delay:G=>{B.delta=G}}},"animate");export{de as animate,K as circle,Z as cornell,ce as createGaussianKernel,Q as cube,ne as loadJSON,oe as loadTexture,re as loadWGSL,ie as loadWebcam,fe as scaleAspect,N as square,J as triangle};